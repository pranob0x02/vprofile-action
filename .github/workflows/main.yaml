name: vprofile actions
on:
  #   push:
  #     branches:
  #       - main
  #   pull_request:
  #     branches:
  #       - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: gitopspranob
  EKS_CLUSTER: gitops-eks

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Maven Test
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: set java 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      # setup sonar-scanner
      - name: Setup sonar-scanner
        uses: warchant/setup-sonar-scanner@v7

      # Run sonar-scanner
      - name: Run sonar-scanner
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.sources=src/
          -Dsonar.junit.reportPaths=target/surefire-reports/
          -Dsonar.jacoco.reportPaths=target/jacoco.exec
          -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
          -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

  build_and_publish:
    runs-on: ubuntu-latest
    needs: Testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: ${{ env.ECR_REPOSITORY }}
          region: ${{ env.AWS_REGION }}
          tags: latest, ${{ github.run_number}}
          dockerfile: Dockerfile
          context: .
          daemon_off: false

  DeployToEKS:
    runs-on: ubuntu-latest
    needs: build_and_publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Login to ECR
        run: kubectl create secret docker-registry regcred \
          --docker-server=${{ secrets.REGISTRY }} \
          --docker-username=AWS \
          --docker-password=$(aws ecr get-login-password --region ${{ env.AWS_REGION }})

      # deploy using helm
      - name: Deploy Helm
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.12
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          cluster-name: ${{ env.EKS_CLUSTER }}
          chart-path: helm/vprofilecharts
          values: appimage=${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }}, apptag=${{ github.run_number }}
          name: vprofile-stack
